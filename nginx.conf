worker_processes 1;

events { worker_connections 1024; }

http {

    # Map X-Agent-Type header to determine action
    map $http_x_agent_type $agent_action {
        default   "allow";
        ai        "charge";
        bot       "block";
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_token"';

    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log notice;

    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    server {
        listen 80;
        server_name localhost;

        location = /robots.txt {
             root /usr/share/nginx/html;
        }

        # Location for non-AI requests (no auth)
        location /no-auth/ {
            internal;
            alias /usr/share/nginx/html/;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location / {
            # Route non-AI requests to no-auth location
            if ($agent_action = "allow") {
                rewrite ^(.*)$ /no-auth$1 last;
            } 
            
            if ($agent_action = "block") {
                return 403; # Block bot requests
            }
            
            # AI requests continue here with authentication
            auth_request /validate_token;
            auth_request_set $auth_status $upstream_status;
            error_page 500 = /access_denied.html;

            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ =404;
        }

        location = /validate_token {
            internal; # This location should only be accessed internally

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization "Bearer $http_x_token";
            proxy_pass https://api.snack.money/payments/validate;

            proxy_intercept_errors on;
            error_page 401 403 404 =403 /access_denied.html;
        }

        location = /access_denied.html {
            internal; # Only accessible internally
            root /usr/share/nginx/html;
        }
    }
}